[ORG 0x7C00]
[BITS 16]

JMP SHORT SETUP
TIMES 0x3E DB 0

SETUP:
	XOR AX, AX
	MOV DS, AX
	MOV ES, AX
	MOV SS, AX
	MOV SP, 0x7C00
	MOV BP, SP ; Initialise the segments.

	MOV AH, 0x00
	MOV AL, 0x01
	INT 0x10 ; Set display to 40x25 and 16 bits of colour.

	MOV AH, 0x01
	MOV CX, 0x2607
	INT 0x10 ; Make the cursor invisible.

	MOV AX, 0x1003
	MOV BL, 0x00
	INT 0x10 ; Turn off blinking attribute.

	MOV BX, WORD[HEAD_COORDS]
	MOV WORD[SNAKE_BODY], BX 

	MOV AL, ' '
	MOV BX, 0x007F
	XOR DX, DX

PRINT_BORDER:
	MOV CX, 40
	CALL WRITE_AT_LOCATION

	MOV DH, 24
	CALL WRITE_AT_LOCATION

	MOV CX, 1
	MOV DH, 1
	MOV SI, 23

LEFT_SIDE:
	CALL WRITE_AT_LOCATION
	INC DH
	DEC SI
	JNZ LEFT_SIDE

	MOV SI, 23
	MOV DL, 39
	MOV DH, 1

RIGHT_SIDE:
	CALL WRITE_AT_LOCATION
	INC DH
	DEC SI
	JNZ RIGHT_SIDE

	MOV BX, 0x0007

GET_KEY:
	MOV AH, 0x01
	INT 0x16

	MOV AL, BYTE[LAST_KEY]

	JZ DIRECTION_SWITCH 

	MOV AH, 0x00
	INT 0x16

	OR AL, 0B00100000

DIRECTION_SWITCH:
	MOV DX, WORD[HEAD_COORDS] 

	PUSH AX
	MOV CX, 1
	MOV AL, ' '
	CALL WRITE_AT_LOCATION
	POP AX

	CMP AL, 'w'
	JE GO_UP

	CMP AL, 'a'
	JE GO_LEFT

	CMP AL, 's'
	JE GO_DOWN

	CMP AL, 'd'
	JE GO_RIGHT

	JMP GET_KEY 

GO_LEFT:
	DEC DL
	JMP SHORT MOVE

GO_RIGHT:
	INC DL
	JMP SHORT MOVE

GO_UP:
	DEC DH
	JMP SHORT MOVE

GO_DOWN:
	INC DH

MOVE:
	MOV BYTE[LAST_KEY], AL
	MOV AL, ' '
	MOV WORD[HEAD_COORDS], DX
	MOV CX, 1

	MOV DI, WORD[SNAKE_LENGTH]
	MOV BX, SNAKE_BODY

MOVE_LOOP:
	MOV SI, WORD[BX]

	MOV WORD[BX], DX
	ADD BX, 2

	PUSH BX

	MOV BX, 0x0020
	CALL WRITE_AT_LOCATION

	MOV DX, SI

	MOV BX, 0x0000
	CALL WRITE_AT_LOCATION

	POP BX

	DEC DI
	JNZ CHECK_COLLISION
	JMP DELAY 

CHECK_COLLISION:
	MOV SI, WORD[HEAD_COORDS]
	CMP SI, DX
	JE HALT

	JMP MOVE_LOOP

DELAY:
	MOV BX, 0x0020
	MOV DX, WORD[HEAD_COORDS]
	CALL WRITE_AT_LOCATION

	MOV AH, 0x86
	MOV CX, 0x0002
	MOV DX, 0x49F0
	INT 0x15

	JMP GET_KEY

HALT:
	MOV BX, 0x0020
	MOV DX, WORD[HEAD_COORDS]
	CALL WRITE_AT_LOCATION

	HLT
	JMP HALT

; Writes n amount of coloured characters on a given location.
;
; AL -> Character.
; BH -> Page.
; BL -> Colour.
; CX -> Number of characters.
; DH -> Row.
; DL -> Column.
WRITE_AT_LOCATION:
	PUSH AX

	MOV AH, 0x02
	INT 0x10

	MOV AH, 0x09
	INT 0x10

	POP AX
	RET

LAST_KEY: DB 'a'

SNAKE_LENGTH: DW 4 
HEAD_COORDS:
HEAD_X: DB 20
HEAD_Y: DB 12

TIMES 510 - ($ - $$) DB 0
DW 0xAA55

SNAKE_BODY:
